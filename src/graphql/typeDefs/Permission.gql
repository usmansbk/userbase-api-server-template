type Permission
  @auth(
    rules: [
      { allow: roles, roles: ["Admin"] }
      { allow: permissions, permissions: ["ReadPermission"] }
    ]
  ) {
  id: ID!
  name: String!
  creator: User
  description: String
  createdAt: DateTime!
  updatedAt: DateTime
  userPermissions: [UserPermission]!
  rolePermissions: [RolePermission]!
}

type Query {
  permission(id: ID!): Permission!
    @auth(
      rules: [
        { allow: roles, roles: ["Admin"] }
        { allow: permissions, permissions: ["ReadPermission"] }
      ]
    )

  permissions(limit: Int): PermissionsList!
    @auth(
      rules: [
        { allow: roles, roles: ["Admin"] }
        { allow: permissions, permissions: ["ReadPermission"] }
      ]
    )
}

type Mutation {
  createPermissions(inputs: [CreatePermissionInput!]!): [Permission]!
    @auth(
      rules: [
        { allow: roles, roles: ["Admin"] }
        { allow: permissions, permissions: ["CreatePermission"] }
      ]
    )

  updatePermissions(inputs: [UpdatePermissionInput!]!): [Permission]!
    @auth(
      rules: [
        { allow: roles, roles: ["Admin"] }
        { allow: permissions, permissions: ["UpdatePermission"] }
      ]
    )

  deletePermissions(inputs: [DeletePermissionInput!]!): [Permission]!
    @auth(
      rules: [
        { allow: roles, roles: ["Admin"] }
        { allow: permissions, permissions: ["DeletePermission"] }
      ]
    )
}

type PermissionsList {
  items: [Permission]!
}

input CreatePermissionInput {
  name: NonEmptyString!
  description: NonEmptyString
}

input UpdatePermissionInput {
  id: ID!
  name: NonEmptyString
  description: NonEmptyString
}

input DeletePermissionInput {
  id: ID!
}
