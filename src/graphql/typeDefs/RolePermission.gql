type RolePermission
  @auth(
    rules: [
      { allow: roles, roles: ["Admin"] }
      { allow: permissions, permissions: ["ReadRolePermission"] }
    ]
  ) {
  id: ID!
  role: Role!
  permission: Permission!
  assignor: User
  createdAt: DateTime!
  updatedAt: DateTime
}

type Query {
  rolePermission(id: ID!): RolePermission!
    @auth(
      rules: [
        { allow: roles, roles: ["Admin"] }
        { allow: permissions, permissions: ["ReadRolePermission"] }
      ]
    )

  rolePermissions(limit: Int): RolePermissionsList!
    @auth(
      rules: [
        { allow: roles, roles: ["Admin"] }
        { allow: permissions, permissions: ["ReadRolePermission"] }
      ]
    )
}

type Mutation {
  createRolePermissions(
    inputs: [CreateRolePermissionInput!]!
  ): [RolePermission]!
    @auth(
      rules: [
        { allow: roles, roles: ["Admin"] }
        { allow: permissions, permissions: ["GrantRolePermission"] }
      ]
    )

  deleteRolePermissions(
    inputs: [DeleteRolePermissionInput!]!
  ): [RolePermission]!
    @auth(
      rules: [
        { allow: roles, roles: ["Admin"] }
        { allow: permissions, permissions: ["GrantRolePermission"] }
      ]
    )
}

type RolePermissionsList {
  items: [RolePermission]!
}

input CreateRolePermissionInput {
  roleId: ID!
  permissionId: ID!
}

input DeleteRolePermissionInput {
  id: ID!
}
